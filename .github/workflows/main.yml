name: 3CXTimeControl CI/CD
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create Semantic Version
      id: version
      uses: paulhatch/semantic-version@v5.2.1
      with:
        tag_prefix: "v"
        version_format: "${major}.${minor}.${increment}"
        namespace: 3cxtimecontrol
        bump_each_commit: true
        bump_each_commit_patch_pattern: "(increaseversion)"
        search_commit_body: false
        user_format_type: "json"
        enable_prerelease_mode: true
        debug: false
    - name: Upate compose file
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "docker.io/gmoreno90/3cxtimecontrol:latest"
        replace: "docker.io/gmoreno90/3cxtimecontrol:${{ steps.version.outputs.version }}"
        include: "**docker-compose.yml"
    - name: Upate Version on appsettings
      uses: jacobtomlinson/gha-find-replace@v3
      with:
        find: "CHANGEFECHAVERSION"
        replace: "${{ steps.version.outputs.version }}"
        include: "**appsettings.json"
    - name: docker login
      run: |
        docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
          context: .
          file: ./3CXTimeControl/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/3cxtimecontrol:${{ steps.version.outputs.version }}, ${{ secrets.DOCKER_USER }}/3cxtimecontrol:latest
  releasegit:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - name: Create Release on GitHub
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.build.outputs.version }}
        release_name: ${{ needs.build.outputs.version }}
        body: |
            Automatic release ${{ needs.build.outputs.version }}
        draft: false
        prerelease: false